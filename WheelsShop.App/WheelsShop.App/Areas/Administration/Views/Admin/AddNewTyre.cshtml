@using System.Web.Mvc.Html
@model WheelsShop.Models.BindingModels.NewTyreBindingModel
@{
    ViewBag.Title = "AddNewTyre";
    //Layout = null;
}

@using (Html.BeginForm("AddNewTyre", "Admin", FormMethod.Post, new { area = "Administration", @class = "col-sm-12 background-image", enctype = "multipart/form-data" }))
{
    <h2 class="col-md-offset-2">Add tyre</h2>
    @Html.AntiForgeryToken()
    @Html.ValidationSummary()   

    <div class="row productChosen col-md-offset-1 col-md-10">
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(m => Model.Brand, new { @class = "col-md-2 control-label" })
                @Html.TextBoxFor(x => Model.Brand, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => Model.Brand)
            </div>
            <div class="form-group">
                @Html.LabelFor(m => Model.Model, new { @class = "col-md-2 control-label" })
                @Html.TextBoxFor(x => Model.Model, new { @class = "form-control", placeholder = " " })
                @Html.ValidationMessageFor(x => Model.Model)
            </div>

            <div class="form-group">
                @Html.Label("Season", "Season",new { @class = "col-md-2 control-label" })
                @Html.DropDownList("Season", EnumHelper.GetSelectList(typeof(WheelsShop.Models.EntityModels.Enums.Season)), "Select My Type", new { @class = "form-control" })
                @Html.ValidationMessageFor(x => Model.Season)
            </div>

            <div class="form-group">
                @Html.LabelFor(m => Model.Stock, new { @class = "col-md-2 control-label" })
                @Html.TextBoxFor(x => Model.Stock, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => Model.Stock)
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(m => Model.Width, new { @class = "col-md-2 control-label" })
                @Html.TextBoxFor(x => Model.Width, new { @type="number", @class = "form-control" })
                @Html.ValidationMessageFor(x => Model.Width)
            </div>

            <div class="form-group">
                @Html.LabelFor(m => Model.Height, new { @class = "col-md-2 control-label" })
                @Html.TextBoxFor(x => Model.Height, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => Model.Height)
            </div>

            <div class="form-group">
                @Html.LabelFor(m => Model.Size, new { @class = "col-md-2 control-label" })
                @Html.TextBoxFor(x => Model.Size, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => Model.Size)
            </div>
            <div class="form-group">
                @Html.LabelFor(m => Model.Price, new { @class = "col-md-2 control-label" })
                @Html.TextBoxFor(x => Model.Price, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => Model.Price)
            </div>
            <div class="form-group">
                @Html.LabelFor(m => Model.Description, new { @class = "col-md-2 control-label" })
                @Html.TextAreaFor(x => Model.Description, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => Model.Description)
            </div>             
           

            <div>
                <label for="file" class="btn-default">Upload Image</label>
                <input style="visibility:hidden;" type="file" name="ImageUrl" id="file"  enctype="multipart/form-data" value="Upload image"/>               
            </div>
           

        </div>
        
        <br />
        <input type="submit" name="name" value="Add Tyre" class="col-md-offset-2 btn btn-lg btn-default" />
    </div>
    
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")   
}

