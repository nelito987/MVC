@*@model IEnumerable<WheelsShop.Models.ViewModels.WheelViewModel>*@
@model PagedList.IPagedList<WheelsShop.Models.ViewModels.WheelViewModel>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Search wheels";
}


@{ Html.RenderAction("Search");}
<div class="row">

    @if (Model == null || Model.Count() == 0)
    {
        <div class="alert alert-success col-md-12">Wheels on this size are not on stock at the moment!!! </div>
    }
    else
    {
        <div class="row col-md-12">
            <div class="col-md-offset-8">
                <span>Order by:</span> 
                <div class="btn sort-btn">
                    @Html.ActionLink("Price", "SearchWheel", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
                </div>
                <div class="btn sort-btn">
                    @Html.ActionLink("Brand", "SearchWheel", new { sortOrder = ViewBag.BrandSortParam, currentFilter = ViewBag.CurrentFilter })
                </div>
            </div>
            
            <div class="col-md-12">
                @foreach (var wheel in Model)
                {
                    <div class="col-md-5" id="tyreForm">
                        <div id="leftSide" class="col-md-6">
                            <img src="data:image;base64,@System.Convert.ToBase64String(wheel.ImageUrl)" id="allTyrePic" />
                        </div>
                        <div id="rightSide" class="col-md-6">
                            <p>
                                <h4>@wheel.Brand</h4>
                            </p>
                            <p>@wheel.Model</p>
                            <p>@Html.DisplayNameFor(m => wheel.Size): @wheel.Size</p>
                            <p>@Html.DisplayNameFor(m => wheel.PCD): @wheel.PCD</p>

                            <p>
                                <h4 class="bold-text">Price: @wheel.Price BGN</h4>
                            </p>
                        </div>
                        <div id="buttons">
                            <button class="btn btn-default" type="button" onclick="location.href = '@Url.Action("BuyWheels", "Shop", new {area = "", productId = @wheel.Id, name = "productId", @class = "btn btn-default"})'">Buy</button>
                            @if (User.IsInRole("Admin"))
                            {

                                using (Html.BeginForm("DeleteProduct", "Admin", FormMethod.Post))
                                {
                                    @Html.AntiForgeryToken()
                                    <div class="form-group">
                                        <div>
                                            <input type="number" name="Id" value="@wheel.Id" hidden />
                                            <input type="submit" value="Delete" class="btn btn-danger" />

                                        </div>
                                    </div>
                                }
                                <button class="btn btn-success" type="button" onclick="location.href = '@Url.Action("EditProduct", "Admin", new {area = "Administration", id = @wheel.Id, @class = "btn btn-default"})'">Edit</button>
                            }
                        </div>

                    </div>
                }
            </div>
          

            <div class="col-md-12">
                Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

                @Html.PagedListPager(Model, page => Url.Action("SearchWheel",
            new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
            </div>
            

        </div>

    }
</div>


